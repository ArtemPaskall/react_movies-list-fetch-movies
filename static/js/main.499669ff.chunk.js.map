{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAddMovie","movieAdded","setMovieAdded","useState","setMovie","title","setTitle","hasLoadingError","setHasLoadingError","hasMovieError","setMovieError","loader","setLoader","errorHandler","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","fetch","then","response","ok","Error","json","getUser","movieFromServer","Response","catch","App","setMovies","some","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.499669ff.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable no-debugger */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n  movieAdded: boolean;\n  setMovieAdded: (arg: boolean) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie, movieAdded, setMovieAdded }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState<string>('');\n\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [hasMovieError, setMovieError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const errorHandler = () => {\n    setMovie(null);\n    setMovieError(true);\n    setLoader(false);\n  };\n\n  const findMovie = () => {\n    setLoader(true);\n    setMovieAdded(false);\n    if (title === '') {\n      errorHandler();\n    } else {\n      getUser(title)\n        .then(movieFromServer => {\n          if (movieFromServer.Response === 'False') {\n            errorHandler();\n          } else {\n            setMovie(movieFromServer);\n            setLoader(false);\n            setMovieError(false);\n          }\n        })\n        .catch(() => {\n          setHasLoadingError(true);\n        });\n    }\n  };\n\n  const addMovie = () => {\n    if (movie !== null) {\n      onAddMovie(movie);\n      setMovie(null);\n      setTitle('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames(\n                  'input',\n                  { 'is-danger': hasMovieError },\n                )}\n                value={title}\n                onChange={event => setTitle(event.target.value)}\n              />\n            </div>\n          </label>\n          { hasMovieError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {loader && (<p>Loading...</p>)}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        { movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n        {movieAdded && <p>You have already added this movie</p>}\n        {hasLoadingError && <h2>No server response</h2>}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nexport {};\nconst myKey = '1d9c16da';\n\nexport const getUser = (title: string) => {\n  return fetch(`https://www.omdbapi.com/?apikey=${myKey}&t=${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('');\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movieAdded, setMovieAdded] = useState<boolean>(false);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.some(film => film.imdbID === movie.imdbID)) {\n      setMovieAdded(true);\n    } else {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovieAdded={setMovieAdded}\n          movieAdded={movieAdded}\n          onAddMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}